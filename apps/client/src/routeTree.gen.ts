/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as QuizIdLayoutImport } from './routes/$quizId/_layout'
import { Route as QuizIdLayoutWaitingImport } from './routes/$quizId/_layout/waiting'

// Create Virtual Routes

const QuizIdImport = createFileRoute('/$quizId')()
const IndexLazyImport = createFileRoute('/')()
const QuizIdCreateTeamLazyImport = createFileRoute('/$quizId/create-team')()
const AdminCreateIndexLazyImport = createFileRoute('/admin/create/')()
const AdminQuizIdIndexLazyImport = createFileRoute('/admin/$quizId/')()
const AdminQuizIdTeamsOverviewLazyImport = createFileRoute(
  '/admin/$quizId/teams-overview',
)()
const AdminQuizIdQuizControlLazyImport = createFileRoute(
  '/admin/$quizId/quiz-control',
)()
const AdminQuizIdGameOverviewLazyImport = createFileRoute(
  '/admin/$quizId/game-overview',
)()
const QuizIdLayoutPlayLazyImport = createFileRoute('/$quizId/_layout/play')()

// Create/Update Routes

const QuizIdRoute = QuizIdImport.update({
  path: '/$quizId',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const QuizIdCreateTeamLazyRoute = QuizIdCreateTeamLazyImport.update({
  path: '/create-team',
  getParentRoute: () => QuizIdRoute,
} as any).lazy(() =>
  import('./routes/$quizId/create-team.lazy').then((d) => d.Route),
)

const QuizIdLayoutRoute = QuizIdLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => QuizIdRoute,
} as any)

const AdminCreateIndexLazyRoute = AdminCreateIndexLazyImport.update({
  path: '/admin/create/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/admin/create/index.lazy').then((d) => d.Route),
)

const AdminQuizIdIndexLazyRoute = AdminQuizIdIndexLazyImport.update({
  path: '/admin/$quizId/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/admin/$quizId/index.lazy').then((d) => d.Route),
)

const AdminQuizIdTeamsOverviewLazyRoute =
  AdminQuizIdTeamsOverviewLazyImport.update({
    path: '/admin/$quizId/teams-overview',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/admin/$quizId/teams-overview.lazy').then((d) => d.Route),
  )

const AdminQuizIdQuizControlLazyRoute = AdminQuizIdQuizControlLazyImport.update(
  {
    path: '/admin/$quizId/quiz-control',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/admin/$quizId/quiz-control.lazy').then((d) => d.Route),
)

const AdminQuizIdGameOverviewLazyRoute =
  AdminQuizIdGameOverviewLazyImport.update({
    path: '/admin/$quizId/game-overview',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/admin/$quizId/game-overview.lazy').then((d) => d.Route),
  )

const QuizIdLayoutPlayLazyRoute = QuizIdLayoutPlayLazyImport.update({
  path: '/play',
  getParentRoute: () => QuizIdLayoutRoute,
} as any).lazy(() =>
  import('./routes/$quizId/_layout/play.lazy').then((d) => d.Route),
)

const QuizIdLayoutWaitingRoute = QuizIdLayoutWaitingImport.update({
  path: '/waiting',
  getParentRoute: () => QuizIdLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/$quizId': {
      id: '/$quizId'
      path: '/$quizId'
      fullPath: '/$quizId'
      preLoaderRoute: typeof QuizIdImport
      parentRoute: typeof rootRoute
    }
    '/$quizId/_layout': {
      id: '/$quizId/_layout'
      path: '/$quizId'
      fullPath: '/$quizId'
      preLoaderRoute: typeof QuizIdLayoutImport
      parentRoute: typeof QuizIdRoute
    }
    '/$quizId/create-team': {
      id: '/$quizId/create-team'
      path: '/create-team'
      fullPath: '/$quizId/create-team'
      preLoaderRoute: typeof QuizIdCreateTeamLazyImport
      parentRoute: typeof QuizIdImport
    }
    '/$quizId/_layout/waiting': {
      id: '/$quizId/_layout/waiting'
      path: '/waiting'
      fullPath: '/$quizId/waiting'
      preLoaderRoute: typeof QuizIdLayoutWaitingImport
      parentRoute: typeof QuizIdLayoutImport
    }
    '/$quizId/_layout/play': {
      id: '/$quizId/_layout/play'
      path: '/play'
      fullPath: '/$quizId/play'
      preLoaderRoute: typeof QuizIdLayoutPlayLazyImport
      parentRoute: typeof QuizIdLayoutImport
    }
    '/admin/$quizId/game-overview': {
      id: '/admin/$quizId/game-overview'
      path: '/admin/$quizId/game-overview'
      fullPath: '/admin/$quizId/game-overview'
      preLoaderRoute: typeof AdminQuizIdGameOverviewLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/$quizId/quiz-control': {
      id: '/admin/$quizId/quiz-control'
      path: '/admin/$quizId/quiz-control'
      fullPath: '/admin/$quizId/quiz-control'
      preLoaderRoute: typeof AdminQuizIdQuizControlLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/$quizId/teams-overview': {
      id: '/admin/$quizId/teams-overview'
      path: '/admin/$quizId/teams-overview'
      fullPath: '/admin/$quizId/teams-overview'
      preLoaderRoute: typeof AdminQuizIdTeamsOverviewLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/$quizId/': {
      id: '/admin/$quizId/'
      path: '/admin/$quizId'
      fullPath: '/admin/$quizId'
      preLoaderRoute: typeof AdminQuizIdIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/create/': {
      id: '/admin/create/'
      path: '/admin/create'
      fullPath: '/admin/create'
      preLoaderRoute: typeof AdminCreateIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface QuizIdLayoutRouteChildren {
  QuizIdLayoutWaitingRoute: typeof QuizIdLayoutWaitingRoute
  QuizIdLayoutPlayLazyRoute: typeof QuizIdLayoutPlayLazyRoute
}

const QuizIdLayoutRouteChildren: QuizIdLayoutRouteChildren = {
  QuizIdLayoutWaitingRoute: QuizIdLayoutWaitingRoute,
  QuizIdLayoutPlayLazyRoute: QuizIdLayoutPlayLazyRoute,
}

const QuizIdLayoutRouteWithChildren = QuizIdLayoutRoute._addFileChildren(
  QuizIdLayoutRouteChildren,
)

interface QuizIdRouteChildren {
  QuizIdLayoutRoute: typeof QuizIdLayoutRouteWithChildren
  QuizIdCreateTeamLazyRoute: typeof QuizIdCreateTeamLazyRoute
}

const QuizIdRouteChildren: QuizIdRouteChildren = {
  QuizIdLayoutRoute: QuizIdLayoutRouteWithChildren,
  QuizIdCreateTeamLazyRoute: QuizIdCreateTeamLazyRoute,
}

const QuizIdRouteWithChildren =
  QuizIdRoute._addFileChildren(QuizIdRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/$quizId': typeof QuizIdLayoutRouteWithChildren
  '/$quizId/create-team': typeof QuizIdCreateTeamLazyRoute
  '/$quizId/waiting': typeof QuizIdLayoutWaitingRoute
  '/$quizId/play': typeof QuizIdLayoutPlayLazyRoute
  '/admin/$quizId/game-overview': typeof AdminQuizIdGameOverviewLazyRoute
  '/admin/$quizId/quiz-control': typeof AdminQuizIdQuizControlLazyRoute
  '/admin/$quizId/teams-overview': typeof AdminQuizIdTeamsOverviewLazyRoute
  '/admin/$quizId': typeof AdminQuizIdIndexLazyRoute
  '/admin/create': typeof AdminCreateIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/$quizId': typeof QuizIdLayoutRouteWithChildren
  '/$quizId/create-team': typeof QuizIdCreateTeamLazyRoute
  '/$quizId/waiting': typeof QuizIdLayoutWaitingRoute
  '/$quizId/play': typeof QuizIdLayoutPlayLazyRoute
  '/admin/$quizId/game-overview': typeof AdminQuizIdGameOverviewLazyRoute
  '/admin/$quizId/quiz-control': typeof AdminQuizIdQuizControlLazyRoute
  '/admin/$quizId/teams-overview': typeof AdminQuizIdTeamsOverviewLazyRoute
  '/admin/$quizId': typeof AdminQuizIdIndexLazyRoute
  '/admin/create': typeof AdminCreateIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/$quizId': typeof QuizIdRouteWithChildren
  '/$quizId/_layout': typeof QuizIdLayoutRouteWithChildren
  '/$quizId/create-team': typeof QuizIdCreateTeamLazyRoute
  '/$quizId/_layout/waiting': typeof QuizIdLayoutWaitingRoute
  '/$quizId/_layout/play': typeof QuizIdLayoutPlayLazyRoute
  '/admin/$quizId/game-overview': typeof AdminQuizIdGameOverviewLazyRoute
  '/admin/$quizId/quiz-control': typeof AdminQuizIdQuizControlLazyRoute
  '/admin/$quizId/teams-overview': typeof AdminQuizIdTeamsOverviewLazyRoute
  '/admin/$quizId/': typeof AdminQuizIdIndexLazyRoute
  '/admin/create/': typeof AdminCreateIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$quizId'
    | '/$quizId/create-team'
    | '/$quizId/waiting'
    | '/$quizId/play'
    | '/admin/$quizId/game-overview'
    | '/admin/$quizId/quiz-control'
    | '/admin/$quizId/teams-overview'
    | '/admin/$quizId'
    | '/admin/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$quizId'
    | '/$quizId/create-team'
    | '/$quizId/waiting'
    | '/$quizId/play'
    | '/admin/$quizId/game-overview'
    | '/admin/$quizId/quiz-control'
    | '/admin/$quizId/teams-overview'
    | '/admin/$quizId'
    | '/admin/create'
  id:
    | '__root__'
    | '/'
    | '/$quizId'
    | '/$quizId/_layout'
    | '/$quizId/create-team'
    | '/$quizId/_layout/waiting'
    | '/$quizId/_layout/play'
    | '/admin/$quizId/game-overview'
    | '/admin/$quizId/quiz-control'
    | '/admin/$quizId/teams-overview'
    | '/admin/$quizId/'
    | '/admin/create/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  QuizIdRoute: typeof QuizIdRouteWithChildren
  AdminQuizIdGameOverviewLazyRoute: typeof AdminQuizIdGameOverviewLazyRoute
  AdminQuizIdQuizControlLazyRoute: typeof AdminQuizIdQuizControlLazyRoute
  AdminQuizIdTeamsOverviewLazyRoute: typeof AdminQuizIdTeamsOverviewLazyRoute
  AdminQuizIdIndexLazyRoute: typeof AdminQuizIdIndexLazyRoute
  AdminCreateIndexLazyRoute: typeof AdminCreateIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  QuizIdRoute: QuizIdRouteWithChildren,
  AdminQuizIdGameOverviewLazyRoute: AdminQuizIdGameOverviewLazyRoute,
  AdminQuizIdQuizControlLazyRoute: AdminQuizIdQuizControlLazyRoute,
  AdminQuizIdTeamsOverviewLazyRoute: AdminQuizIdTeamsOverviewLazyRoute,
  AdminQuizIdIndexLazyRoute: AdminQuizIdIndexLazyRoute,
  AdminCreateIndexLazyRoute: AdminCreateIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$quizId",
        "/admin/$quizId/game-overview",
        "/admin/$quizId/quiz-control",
        "/admin/$quizId/teams-overview",
        "/admin/$quizId/",
        "/admin/create/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/$quizId": {
      "filePath": "$quizId",
      "children": [
        "/$quizId/_layout",
        "/$quizId/create-team"
      ]
    },
    "/$quizId/_layout": {
      "filePath": "$quizId/_layout.tsx",
      "parent": "/$quizId",
      "children": [
        "/$quizId/_layout/waiting",
        "/$quizId/_layout/play"
      ]
    },
    "/$quizId/create-team": {
      "filePath": "$quizId/create-team.lazy.tsx",
      "parent": "/$quizId"
    },
    "/$quizId/_layout/waiting": {
      "filePath": "$quizId/_layout/waiting.tsx",
      "parent": "/$quizId/_layout"
    },
    "/$quizId/_layout/play": {
      "filePath": "$quizId/_layout/play.lazy.tsx",
      "parent": "/$quizId/_layout"
    },
    "/admin/$quizId/game-overview": {
      "filePath": "admin/$quizId/game-overview.lazy.tsx"
    },
    "/admin/$quizId/quiz-control": {
      "filePath": "admin/$quizId/quiz-control.lazy.tsx"
    },
    "/admin/$quizId/teams-overview": {
      "filePath": "admin/$quizId/teams-overview.lazy.tsx"
    },
    "/admin/$quizId/": {
      "filePath": "admin/$quizId/index.lazy.tsx"
    },
    "/admin/create/": {
      "filePath": "admin/create/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
